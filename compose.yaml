services:
  server:
    build:
      context: ./backend
    ports:
      - 8080:8080
      - 5005:5005
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_EXPIRATION_TIME=${JWT_EXPIRATION_TIME}
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=tacs
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 5432
    ports:
    - 5433:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  frontend:
    container_name: back-for-frontend
    image: front-tptacs-img
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - server
  redis:
    image: redis/redis-stack:latest
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}  # Set your Redis password here
    #command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--loadmodule", "/opt/redis-stack/lib/redistimeseries.so"]
    volumes:
      - redis-data:/data
volumes:
  db-data:
  redis-data:
    driver: local
secrets:
  db-password:
    file: secrets/db-password.txt